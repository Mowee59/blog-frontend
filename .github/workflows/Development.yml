# Workflow name
name: Development workflow

# Trigger the workflow on push to the main branch
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

# Environment variables used throughout the workflow
env:
  REGISTRY: ghcr.io # GitHub Container Registry
  IMAGE_NAME: ${{ github.repository_owner }}/${{ github.event.repository.name }} # Format: owner/repo-name

# Define the jobs to run tests, then build and push the Docker image, and finally deploy
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Adjust this to your project's Node.js version

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

  versioning:
    needs: test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: yarn install

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

  build:
    needs: [test, versioning]
    # This condition ensures that the build job always runs, but only proceeds if the test job succeeded
    # and the versioning job either succeeded or was skipped.
    if: always() && (needs.test.result == 'success') && (needs.versioning.result == 'success' || needs.versioning.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: . # Build context is the root of the repository
          push: ${{ github.event_name == 'push' }} # Only push the image on push events: true if push event, false if pull request
          tags: | # Tags for the Docker image
            ${{ env.REGISTRY }}/${{ env.OWNER_LOWER }}/${{ github.event.repository.name }}:develop
          labels: ${{ steps.meta.outputs.labels }} # Labels extracted in the previous step